{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNyfq2fLwYfdW5zH0pzubcB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":38},"id":"spdu7j-3wzXr","executionInfo":{"status":"ok","timestamp":1694684034466,"user_tz":-330,"elapsed":7860,"user":{"displayName":"Pramod sagar Yenbari","userId":"01190845190287837039"}},"outputId":"1fb0a81d-6bc3-4fb5-f221-38d83c250fdd"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-98774cc2-57a3-4b9c-b238-f23fa5d50edd\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-98774cc2-57a3-4b9c-b238-f23fa5d50edd\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}}],"source":["from google.colab import files\n","\n","# Prompt the user to upload an audio file\n","uploaded = files.upload()\n","\n","# Display the uploaded file names\n","for filename in uploaded.keys():\n","    print(f'Uploaded file: {filename}')\n"]},{"cell_type":"code","source":["import librosa\n","import numpy as np\n","\n","# Initialize empty lists to store features and labels\n","audio_features = []\n","labels = []\n","\n","# Loop through the uploaded audio files and extract features\n","for filename in uploaded.keys():\n","    # Load the audio file\n","    audio_data, _ = librosa.load(filename, sr=None)  # sr=None to preserve the original sampling rate\n","\n","    # Extract MFCC features (you can add more features as needed)\n","    mfccs = librosa.feature.mfcc(audio_data, sr=None, n_mfcc=13)  # Change n_mfcc as needed\n","\n","    # Calculate the mean of MFCC coefficients as a feature\n","    mfcc_mean = np.mean(mfccs, axis=1)\n","\n","    # Append the feature and label to the lists\n","    audio_features.append(mfcc_mean)\n","    labels.append('happy' if 'happy' in filename else 'sad')  # You may need to adjust this based on your dataset\n","\n","# Now, you have audio features in audio_features and labels in labels\n"],"metadata":{"id":"c3GJTWO450qc","executionInfo":{"status":"ok","timestamp":1694684034468,"user_tz":-330,"elapsed":8,"user":{"displayName":"Pramod sagar Yenbari","userId":"01190845190287837039"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["def perform_keyword_detection(audio_file_path):\n","    # Replace this with the actual code for keyword detection\n","\n","    # Return the detected keywords\n","    return detected_keywords\n","\n","# Loop through the uploaded audio files and perform keyword detection\n","for filename in uploaded.keys():\n","    detected_keywords = perform_keyword_detection(filename)\n","    print(f'Keywords detected in {filename}: {detected_keywords}')\n"],"metadata":{"id":"LBiywnRq-ypR","executionInfo":{"status":"ok","timestamp":1694684038865,"user_tz":-330,"elapsed":613,"user":{"displayName":"Pramod sagar Yenbari","userId":"01190845190287837039"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# Sample code for printing results and creating a chart (replace with your actual results)\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","# Sample data for emotion detection results\n","emotion_results = {'Audio File': ['file1.wav', 'file2.wav'],\n","                   'Emotion': ['happy', 'sad']}\n","emotion_df = pd.DataFrame(emotion_results)\n","\n","# Sample data for keyword detection results\n","keyword_results = {'Audio File': ['file1.wav', 'file2.wav'],\n","                   'Keywords': [['keyword1', 'keyword2'], ['keyword3']]}\n","keyword_df = pd.DataFrame(keyword_results)\n","\n","# Print emotion detection results\n","print(\"Emotion Detection Results:\")\n","print(emotion_df)\n","\n","# Print keyword detection results\n","print(\"\\nKeyword Detection Results:\")\n","print(keyword_df)\n","\n","# Create a simple line chart for emotion detection\n","plt.figure(figsize=(8, 4))\n","plt.plot(emotion_df['Audio File'], emotion_df['Emotion'])\n","plt.xlabel('Audio File')\n","plt.ylabel('Emotion')\n","plt.title('Emotion Detection Results')\n","plt.xticks(rotation=45)\n","plt.show()\n","\n","# Create a simple line chart for keyword detection\n","# Create a bar chart for keyword detection results\n","plt.figure(figsize=(8, 4))\n","plt.bar(keyword_df['Audio File'], keyword_df['Keywords'].apply(len))\n","plt.xlabel('Audio File')\n","plt.ylabel('Number of Keywords Detected')\n","plt.title('Keyword Detection Results')\n","plt.xticks(rotation=45)\n","plt.show()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Yxybj8q1_U6Q","executionInfo":{"status":"ok","timestamp":1694684043590,"user_tz":-330,"elapsed":1041,"user":{"displayName":"Pramod sagar Yenbari","userId":"01190845190287837039"}},"outputId":"42638d3b-e39d-4bb0-bf06-2e8ef2495e48"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Emotion Detection Results:\n","  Audio File Emotion\n","0  file1.wav   happy\n","1  file2.wav     sad\n","\n","Keyword Detection Results:\n","  Audio File              Keywords\n","0  file1.wav  [keyword1, keyword2]\n","1  file2.wav            [keyword3]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}